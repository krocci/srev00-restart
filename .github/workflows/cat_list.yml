name: 手动提取并发送 list.txt 文件

on:
  workflow_dispatch:

jobs:
  extract_list:
    runs-on: ubuntu-latest
    steps:
      - name: 设置环境变量
        run: |
          # 将 GitHub Secrets 设置为环境变量
          echo "ACCOUNTS=${{ secrets.ACCOUNTS }}" >> $GITHUB_ENV
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_ENV
          echo "TELEGRAM_USER_ID=${{ secrets.TELEGRAM_USER_ID }}" >> $GITHUB_ENV

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y sshpass

      - name: 提取并过滤 list.txt
        run: |
          #!/bin/bash

          # 分割 ACCOUNTS 环境变量为数组
          IFS=';' read -r -a ACCOUNTS_ARRAY <<< "$ACCOUNTS"

          # 创建临时文件，用于存储从服务器提取的所有 list.txt 内容
          TEMP_FILE=$(mktemp)
          FILTERED_FILE=$(mktemp)

          # 定义提取 list.txt 文件的函数
          extract_list() {
            local server="$1"
            local username="$2"
            local password="$3"
            
            # 使用 sshpass 从远程服务器提取 list.txt
            sshpass -p "$password" ssh -o StrictHostKeyChecking=no "$username@$server"
            cat ./domains/$username.serv00.net/logs/list.txt
          }

          # 遍历每个账户，从对应服务器提取 list.txt 内容
          for account in "${ACCOUNTS_ARRAY[@]}"; do
            IFS=' ' read -r -a credentials <<< "$account"
            SERVER="${credentials[0]}"
            USERNAME="${credentials[1]}"
            PASSWORD="${credentials[2]}"

            # 调用函数提取 list.txt 文件
            extract_list "$SERVER" "$USERNAME" "$PASSWORD"
          done >> "$TEMP_FILE"

          # 使用 grep 过滤包含特定协议的行，保存到过滤后的文件中
          grep -E '(vmess|hysteria2|tuic)://' "$TEMP_FILE" > "$FILTERED_FILE"

          # 如果过滤后的文件不为空，则发送给 Telegram
          if [[ -s "$FILTERED_FILE" ]]; then
            curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendDocument" \
              -F chat_id="$TELEGRAM_USER_ID" \
              -F document=@"$FILTERED_FILE"
          else
            echo "未找到符合条件的内容。"
          fi

          # 清理临时文件
          rm -f "$TEMP_FILE" "$FILTERED_FILE"
